{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kavis\\\\Desktop\\\\coding things\\\\section48\\\\frontend\\\\src\\\\Components\\\\Createserver.js\";\nimport React from \"react\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Createserver(props) {\n  let createRoom = () => {\n    let url = \"http://localhost:5000\";\n    let socket = io(url, {\n      autoConnect: false\n    });\n    let params;\n    if (document.getElementById('room-name').value !== '') {\n      params = {\n        roomName: document.getElementById('room-name').value,\n        username: props.username\n      };\n    }\n    socket.emit('join', params, function (err) {\n      console.log(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"server-form-container\",\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"room-name\",\n        name: \"room-name\",\n        placeholder: \"Room Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: createRoom,\n        children: \"Create Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n_c = Createserver;\nexport default Createserver;\nvar _c;\n$RefreshReg$(_c, \"Createserver\");","map":{"version":3,"names":["React","io","Createserver","props","createRoom","url","socket","autoConnect","params","document","getElementById","value","roomName","username","emit","err","console","log"],"sources":["C:/Users/kavis/Desktop/coding things/section48/frontend/src/Components/Createserver.js"],"sourcesContent":["import React from \"react\";\r\nimport {io} from \"socket.io-client\"\r\n\r\n\r\nfunction Createserver(props){\r\n\r\n    let createRoom = ()=>{\r\n        let url = \"http://localhost:5000\"\r\n        let socket = io(url, {\r\n            autoConnect: false\r\n        })\r\n        let params;\r\n        if(document.getElementById('room-name').value !== ''){\r\n\r\n        \r\n            params = {\r\n                roomName: document.getElementById('room-name').value,\r\n                username: props.username\r\n            }\r\n        }\r\n\r\n        socket.emit('join', params, function(err){\r\n            console.log(err);\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <div id = \"server-form-container\" className=\"container\">\r\n                <input type = \"text\" id = \"room-name\" name = \"room-name\" placeholder=\"Room Name\"/>\r\n                <button onClick={createRoom}>Create Room</button>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default Createserver;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,EAAE,QAAO,kBAAkB;AAAA;AAAA;AAGnC,SAASC,YAAY,CAACC,KAAK,EAAC;EAExB,IAAIC,UAAU,GAAG,MAAI;IACjB,IAAIC,GAAG,GAAG,uBAAuB;IACjC,IAAIC,MAAM,GAAGL,EAAE,CAACI,GAAG,EAAE;MACjBE,WAAW,EAAE;IACjB,CAAC,CAAC;IACF,IAAIC,MAAM;IACV,IAAGC,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK,KAAK,EAAE,EAAC;MAGjDH,MAAM,GAAG;QACLI,QAAQ,EAAEH,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK;QACpDE,QAAQ,EAAEV,KAAK,CAACU;MACpB,CAAC;IACL;IAEAP,MAAM,CAACQ,IAAI,CAAC,MAAM,EAAEN,MAAM,EAAE,UAASO,GAAG,EAAC;MACrCC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;IACpB,CAAC,CAAC;EAGN,CAAC;EAGD,oBACI;IAAA,uBACI;MAAK,EAAE,EAAG,uBAAuB;MAAC,SAAS,EAAC,WAAW;MAAA,wBACnD;QAAO,IAAI,EAAG,MAAM;QAAC,EAAE,EAAG,WAAW;QAAC,IAAI,EAAG,WAAW;QAAC,WAAW,EAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAE,eAClF;QAAQ,OAAO,EAAEX,UAAW;QAAA,UAAC;MAAW;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA;EAC/C,iBACP;AAGX;AAAC,KAlCQF,YAAY;AAoCrB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}